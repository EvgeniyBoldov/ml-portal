#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–¥–ª—è –ª–µ–≥–∫–∏—Ö –º–æ–¥–µ–ª–µ–π)
"""
import os
import sys
import argparse
from pathlib import Path
from huggingface_hub import snapshot_download

def download_model_simple(model_id: str, output_dir: str = "models") -> bool:
    """–ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏: {model_id}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        output_path = Path(output_dir)
        output_path.mkdir(exist_ok=True)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å
        model_dir = output_path / model_id.replace("/", "--")
        model_dir.mkdir(parents=True, exist_ok=True)
        
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤: {model_dir}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        downloaded_path = snapshot_download(
            repo_id=model_id,
            local_dir=str(model_dir),
            local_dir_use_symlinks=False,
            ignore_patterns=["*.bin", "*.h5", "*.onnx", "*.ckpt", "*.pth"]  # –ò—Å–∫–ª—é—á–∞–µ–º –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã
        )
        
        print(f"‚úÖ –ú–æ–¥–µ–ª—å —Å–∫–∞—á–∞–Ω–∞: {downloaded_path}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
        total_size = sum(f.stat().st_size for f in model_dir.rglob("*") if f.is_file())
        print(f"üìä –†–∞–∑–º–µ—Ä: {total_size / (1024*1024):.1f} MB")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    parser = argparse.ArgumentParser(description="–ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π")
    parser.add_argument("model_id", help="ID –º–æ–¥–µ–ª–∏")
    parser.add_argument("--output-dir", default="models", help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
    
    args = parser.parse_args()
    
    success = download_model_simple(args.model_id, args.output_dir)
    
    if success:
        print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {args.output_dir}/")
        print(f"üí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ docker-compose:")
        print(f"   - EMB_MODEL_ID={args.model_id}")
        print(f"   - EMB_MODEL_ALIAS={args.model_id.split('/')[-1]}")
    else:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª—å")
        sys.exit(1)

if __name__ == "__main__":
    main()
