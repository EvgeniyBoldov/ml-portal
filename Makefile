# ML Portal Monorepo Management

.PHONY: help build-local build-prod up-local up-prod down-local down-prod clean
.PHONY: install-frontend install-backend test-frontend test-backend lint-frontend lint-backend
.PHONY: format-frontend format-backend type-check-frontend type-check-backend

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_LOCAL = infra/compose/docker-compose.local.yml
COMPOSE_PROD = infra/compose/docker-compose.prod.yml
FRONTEND_DIR = apps/web
BACKEND_DIR = apps/api
SCRIPTS_DIR = infra/scripts

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "ML Portal Monorepo Management"
	@echo "============================="
	@echo ""
	@echo "üöÄ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  make install-all        - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  make dev                - –ó–∞–ø—É—Å—Ç–∏—Ç—å dev —Å–µ—Ä–≤–µ—Ä—ã"
	@echo "  make build-all          - –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo ""
	@echo "üê≥ Docker:"
	@echo "  make build-local        - –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make up-local           - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫"
	@echo "  make down-local         - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫"
	@echo "  make build-prod         - –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞"
	@echo "  make up-prod            - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫"
	@echo "  make down-prod          - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫"
	@echo ""
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  make test-all           - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
	@echo "  make test-frontend      - –¢–µ—Å—Ç—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
	@echo "  make test-backend       - –¢–µ—Å—Ç—ã –±—ç–∫–µ–Ω–¥–∞"
	@echo "  make test-e2e           - E2E —Ç–µ—Å—Ç—ã"
	@echo "  make test-quick         - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"
	@echo ""
	@echo "üîç –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:"
	@echo "  make lint-all           - –õ–∏–Ω—Ç–∏–Ω–≥ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make format-all         - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make type-check-all     - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤"
	@echo ""
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞:"
	@echo "  make clean              - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –∏ volumes"
	@echo "  make clean-cache        - –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo "  make clean-all          - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞"
	@echo ""
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
	@echo "  make logs               - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make status             - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo ""
	@echo "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
	@echo "  make run-migrations     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î"
	@echo "  make create-superuser   - –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	@echo "  make reset-db           - –°–±—Ä–æ—Å–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	@echo ""
	@echo "ü§ñ –ú–æ–¥–µ–ª–∏:"
	@echo "  make download-models    - –°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª–∏ –∏–∑ HuggingFace"
	@echo "  make list-models        - –ü–æ–∫–∞–∑–∞—Ç—å —Å–∫–∞—á–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏"
	@echo ""
	@echo "üîß –£—Ç–∏–ª–∏—Ç—ã:"
	@echo "  make gen-structure      - –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ"
	@echo "  make gen-tree           - –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make gen-content        - –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–µ–∫—Ç–∞ (apps.txt, infra.txt)"
	@echo "  make gen-openapi        - –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å OpenAPI SDK"
	@echo "  make gen-docs           - –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install-all: install-frontend install-backend ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

install-frontend: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd $(FRONTEND_DIR) && npm install

install-backend: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞..."
	cd $(BACKEND_DIR) && pip install -r requirements.txt
	cd $(BACKEND_DIR) && pip install -r requirements-test.txt

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å dev —Å–µ—Ä–≤–µ—Ä—ã
	@echo "üöÄ –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–æ–≤..."
	@echo "Frontend: http://localhost:3000"
	@echo "Backend: http://localhost:8000"
	@echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
	@echo ""
	@echo "–ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ —Ñ–æ–Ω–µ..."
	cd $(FRONTEND_DIR) && npm run dev &
	@echo "–ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –≤ —Ñ–æ–Ω–µ..."
	cd $(BACKEND_DIR) && uvicorn src.app.main:app --reload --host 0.0.0.0 --port 8000 &
	@echo "‚úÖ Dev —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –°–±–æ—Ä–∫–∞
build-all: build-frontend build-backend ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

build-frontend: ## –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
	@echo "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd $(FRONTEND_DIR) && npm run build

build-backend: ## –°–æ–±—Ä–∞—Ç—å –±—ç–∫–µ–Ω–¥ (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤)
	@echo "üî® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –±—ç–∫–µ–Ω–¥–∞..."
	cd $(BACKEND_DIR) && mypy src/

# Docker
build-local: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üê≥ –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose -f $(COMPOSE_LOCAL) build

up-local: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫
	@echo "üê≥ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞..."
	docker-compose -f $(COMPOSE_LOCAL) up -d

down-local: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫
	@echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞..."
	docker-compose -f $(COMPOSE_LOCAL) down

build-prod: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
	@echo "üê≥ –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞..."
	docker-compose -f $(COMPOSE_PROD) build

up-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫
	@echo "üê≥ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫–∞..."
	docker-compose -f $(COMPOSE_PROD) up -d

down-prod: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫
	@echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫–∞..."
	docker-compose -f $(COMPOSE_PROD) down

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test-all: test-frontend test-backend ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã

test-frontend: ## –¢–µ—Å—Ç—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd $(FRONTEND_DIR) && npm test

test-backend: ## –¢–µ—Å—Ç—ã –±—ç–∫–µ–Ω–¥–∞
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±—ç–∫–µ–Ω–¥–∞..."
	cd $(BACKEND_DIR) && python -m pytest

test-e2e: ## E2E —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤..."
	cd $(BACKEND_DIR) && python -m pytest tests/e2e/ -v

test-quick: ## –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
	@echo "üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã..."
	@echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
	@curl -f http://localhost:8000/healthz || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	@curl -f http://localhost:3000 || echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"

# –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
lint-all: lint-frontend lint-backend ## –õ–∏–Ω—Ç–∏–Ω–≥ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

lint-frontend: ## –õ–∏–Ω—Ç–∏–Ω–≥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "üîç –õ–∏–Ω—Ç–∏–Ω–≥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd $(FRONTEND_DIR) && npm run lint

lint-backend: ## –õ–∏–Ω—Ç–∏–Ω–≥ –±—ç–∫–µ–Ω–¥–∞
	@echo "üîç –õ–∏–Ω—Ç–∏–Ω–≥ –±—ç–∫–µ–Ω–¥–∞..."
	cd $(BACKEND_DIR) && flake8 src/
	cd $(BACKEND_DIR) && black --check src/
	cd $(BACKEND_DIR) && isort --check-only src/

format-all: format-frontend format-backend ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

format-frontend: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd $(FRONTEND_DIR) && npm run format

format-backend: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞..."
	cd $(BACKEND_DIR) && black src/
	cd $(BACKEND_DIR) && isort src/

type-check-all: type-check-frontend type-check-backend ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

type-check-frontend: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	cd $(FRONTEND_DIR) && npm run type-check

type-check-backend: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –±—ç–∫–µ–Ω–¥–∞
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –±—ç–∫–µ–Ω–¥–∞..."
	cd $(BACKEND_DIR) && mypy src/

# –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –∏ volumes
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –∏ volumes..."
	docker-compose -f $(COMPOSE_LOCAL) down -v --remove-orphans
	docker-compose -f $(COMPOSE_PROD) down -v --remove-orphans
	docker system prune -f
	docker volume prune -f

clean-cache: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	@echo "–û—á–∏—Å—Ç–∫–∞ Python –∫—ç—à–∞..."
	find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
	find . -name "*.pyc" -type f -delete 2>/dev/null || true
	find . -name "*.pyo" -type f -delete 2>/dev/null || true
	find . -name "*.pyd" -type f -delete 2>/dev/null || true
	@echo "–û—á–∏—Å—Ç–∫–∞ Node.js –∫—ç—à–∞..."
	cd $(FRONTEND_DIR) && rm -rf node_modules/.cache 2>/dev/null || true
	cd $(FRONTEND_DIR) && rm -rf dist 2>/dev/null || true
	@echo "–û—á–∏—Å—Ç–∫–∞ TypeScript –∫—ç—à–∞..."
	find . -name "*.tsbuildinfo" -type f -delete 2>/dev/null || true
	@echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω"

clean-all: clean clean-cache ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
	@echo "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f $(COMPOSE_LOCAL) logs -f

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f $(COMPOSE_LOCAL) ps

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
run-migrations: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
	@echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
	docker-compose -f $(COMPOSE_LOCAL) exec api python -m alembic upgrade head

create-superuser: ## –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@echo "üîê –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: " login; \
	read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–º–∏–Ω. 12 —Å–∏–º–≤–æ–ª–æ–≤): " password; \
	echo; \
	read -p "–í–≤–µ–¥–∏—Ç–µ email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): " email; \
	cd $(BACKEND_DIR) && python scripts/create_superuser.py --login "$$login" --password "$$password" --email "$$email"

reset-db: run-migrations create-superuser ## –°–±—Ä–æ—Å–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@echo "‚úÖ –ë–î —Å–±—Ä–æ—à–µ–Ω–∞ –∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω"

# –ú–æ–¥–µ–ª–∏
download-models: ## –°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª–∏ –∏–∑ HuggingFace
	@echo "ü§ñ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –∏–∑ HuggingFace..."
	@echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python $(SCRIPTS_DIR)/download_models.py <model_id> [–æ–ø—Ü–∏–∏]"
	@echo "–ü—Ä–∏–º–µ—Ä—ã:"
	@echo "  python $(SCRIPTS_DIR)/download_models.py sentence-transformers/all-MiniLM-L6-v2 --test"
	@echo "  python $(SCRIPTS_DIR)/download_models.py sentence-transformers/all-mpnet-base-v2 --info"

download-model: ## –°–∫–∞—á–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å
	@echo "ü§ñ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏..."
	@if [ -z "$(MODEL_ID)" ]; then \
		echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω MODEL_ID"; \
		echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make download-model MODEL_ID=<model_id>"; \
		echo "–ù–∞–ø—Ä–∏–º–µ—Ä: make download-model MODEL_ID=BAAI/bge-3m"; \
	else \
		python3 $(SCRIPTS_DIR)/download_model.py $(MODEL_ID) $(ARGS); \
	fi

list-models: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–∫–∞—á–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
	@echo "ü§ñ –°–∫–∞—á–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
	@if [ -d "models" ]; then \
		echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è models:"; \
		ls -la models/ 2>/dev/null || echo "  (–ø—É—Å—Ç–∞—è)"; \
	else \
		echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è models –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; \
		echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make download-models"; \
	fi

# –£—Ç–∏–ª–∏—Ç—ã
gen-structure: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
	@echo "üìÅ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
	@echo ""
	@echo "ML Portal Monorepo Structure"
	@echo "============================"
	@echo ""
	@echo "üìÅ ml-portal/"
	@echo "‚îú‚îÄ‚îÄ üìÑ package.json              # Monorepo workspace management"
	@echo "‚îú‚îÄ‚îÄ üìÑ Makefile                  # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã"
	@echo "‚îú‚îÄ‚îÄ üìÑ README.md                 # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
	@echo "‚îú‚îÄ‚îÄ üìÑ env.example               # –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
	@echo "‚îú‚îÄ‚îÄ üìÅ apps/                     # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÅ api/                  # Backend (FastAPI)"
	@echo "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ pyproject.toml    # Python –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
	@echo "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ requirements.txt  # Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ requirements-test.txt # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ src/app/          # –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ api/          # HTTP endpoints"
	@echo "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ core/         # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"
	@echo "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ services/     # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞"
	@echo "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ repositories/ # –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º"
	@echo "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ tasks/        # Celery –∑–∞–¥–∞—á–∏"
	@echo "‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ workers/      # Celery workers"
	@echo "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ tests/            # –¢–µ—Å—Ç—ã"
	@echo "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ scripts/          # –£—Ç–∏–ª–∏—Ç—ã"
	@echo "‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ migrations/       # Alembic –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "‚îÇ   ‚îî‚îÄ‚îÄ üìÅ web/                  # Frontend (React/Vite)"
	@echo "‚îÇ       ‚îú‚îÄ‚îÄ üìÑ package.json      # Node.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
	@echo "‚îÇ       ‚îú‚îÄ‚îÄ üìÑ tsconfig.json     # TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
	@echo "‚îÇ       ‚îú‚îÄ‚îÄ üìÑ vite.config.ts    # Vite –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
	@echo "‚îÇ       ‚îú‚îÄ‚îÄ üìÅ src/              # –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥"
	@echo "‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ app/          # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, —Ä–æ—É—Ç–µ—Ä, –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã"
	@echo "‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ pages/        # –°—Ç—Ä–∞–Ω–∏—Ü—ã (admin, gpt)"
	@echo "‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ widgets/      # –°–æ—Å—Ç–∞–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã"
	@echo "‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ features/     # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"
	@echo "‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ entities/     # –°—É—â–Ω–æ—Å—Ç–∏ (zustand stores)"
	@echo "‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ shared/       # –û–±—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã"
	@echo "‚îÇ       ‚îî‚îÄ‚îÄ üìÅ public/           # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã"
	@echo "‚îú‚îÄ‚îÄ üìÅ infra/                    # –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÅ compose/              # Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÅ docker/               # Docker —Ñ–∞–π–ª—ã"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÅ k8s/                  # Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÅ nginx/                # Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
	@echo "‚îÇ   ‚îî‚îÄ‚îÄ üìÅ scripts/              # –£—Ç–∏–ª–∏—Ç—ã –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
	@echo "‚îú‚îÄ‚îÄ üìÅ docs/                     # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÑ API.md                # API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
	@echo "‚îÇ   ‚îú‚îÄ‚îÄ üìÅ architecture/         # –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
	@echo "‚îÇ   ‚îî‚îÄ‚îÄ üìÅ guides/               # –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞"
	@echo "‚îî‚îÄ‚îÄ üìÅ models/                   # ML –º–æ–¥–µ–ª–∏"
	@echo "    ‚îú‚îÄ‚îÄ üìÅ microsoft--DialoGPT-small/"
	@echo "    ‚îî‚îÄ‚îÄ üìÅ sentence-transformers--all-MiniLM-L6-v2/"
	@echo ""
	@echo "üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:"
	@echo "‚Ä¢ Frontend: Feature-Sliced Design (FSD)"
	@echo "‚Ä¢ Backend: Clean Architecture"
	@echo "‚Ä¢ Monorepo: Workspace management"
	@echo "‚Ä¢ Docker: Multi-stage builds"
	@echo "‚Ä¢ Testing: Unit + E2E tests"

gen-tree: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "üå≥ –î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞:"
	@echo ""
	@tree -I 'node_modules|__pycache__|*.pyc|.git|.venv|.pytest_cache|dist|*.tsbuildinfo' -a || find . -type f -not -path './node_modules/*' -not -path './__pycache__/*' -not -path './.git/*' -not -path './.venv/*' -not -path './.pytest_cache/*' -not -path './dist/*' -not -path './*.tsbuildinfo' | head -50

gen-content: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–µ–∫—Ç–∞ (apps.txt, infra.txt)
	@echo "üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ apps.txt –∏ infra.txt —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤..."
	python3 $(SCRIPTS_DIR)/generate_project_content.py
	@echo "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Ñ–∞–π–ª—ã:"
	@echo "  üìÑ docs/generated/apps.txt - –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ apps/"
	@echo "  üìÑ docs/generated/infra.txt - –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ infra/"

gen-openapi: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å OpenAPI SDK
	@echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è OpenAPI SDK..."
	@echo "TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é OpenAPI SDK"
	@echo "–ë—É–¥—É—â–∏–π –ø—É—Ç—å: packages/openapi-sdk/"

gen-docs: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@echo "TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
	@echo "–ë—É–¥—É—â–∏–π –ø—É—Ç—å: docs/"

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy: build-prod up-prod ## –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (—Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫)
	@echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –û—Ç–∫–∞—Ç
rollback: ## –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
	@echo "üîÑ –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
	docker service update --rollback ml-portal_api
	docker service update --rollback ml-portal_worker-mixed
	docker service update --rollback ml-portal_worker-rag