# ML Portal Docker Management

.PHONY: help build-local build-prod up-local up-prod down-local down-prod clean

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "ML Portal Docker Management"
	@echo "=========================="
	@echo ""
	@echo "–õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  make build-local    - –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make up-local       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫"
	@echo "  make down-local     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫"
	@echo ""
	@echo "–ü—Ä–æ–¥–∞–∫—à–Ω:"
	@echo "  make build-prod     - –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞"
	@echo "  make up-prod        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫"
	@echo "  make down-prod      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫"
	@echo ""
	@echo "–£—Ç–∏–ª–∏—Ç—ã:"
	@echo "  make clean          - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –∏ volumes"
	@echo "  make clean-cache    - –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Python –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo "  make clean-all      - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–æ–±—Ä–∞–∑—ã + –∫—ç—à)"
	@echo "  make logs           - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo ""
	@echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  make test-quick     - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"
	@echo "  make test-e2e       - –ü–æ–ª–Ω—ã–µ E2E —Ç–µ—Å—Ç—ã"
	@echo "  make test-local     - –¢–µ—Å—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö"
	@echo ""
	@echo "–°–∏—Å—Ç–µ–º–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤:"
	@echo "  make init-models    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∫–µ—Ç –º–æ–¥–µ–ª–µ–π –≤ MinIO"
	@echo "  make test-embedding - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤"
	@echo "  make demo-embedding - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤"
	@echo "  make logs-embedding - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ embedding worker"
	@echo ""
	@echo "–ú–æ–¥–µ–ª–∏:"
	@echo "  make download-models      - –°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª–∏ –∏–∑ HuggingFace"
	@echo "  make download-model       - –°–∫–∞—á–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: BAAI/bge-3m)"
	@echo "  make list-models          - –ü–æ–∫–∞–∑–∞—Ç—å —Å–∫–∞—á–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏"
	@echo ""
	@echo "–ê–¥–º–∏–Ω–∫–∞ –∏ RBAC:"
	@echo "  make create-superuser     - –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	@echo "  make test-rbac           - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å RBAC —Å–∏—Å—Ç–µ–º—É"
	@echo "  make run-migrations      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î"
	@echo "  make reset-db            - –°–±—Ä–æ—Å–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	@echo "  make test-security       - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
	@echo "  make test-tz-compliance - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó"
	@echo ""
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞:"
	@echo "  make gen-backend         - –ö–æ–¥ –±—ç–∫–µ–Ω–¥–∞"
	@echo "  make gen-frontend        - –ö–æ–¥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
	@echo "  make gen-devops          - DevOps –∫–æ–¥ (Docker, Compose)"
	@echo "  make gen-all             - –í–µ—Å—å –∫–æ–¥"
	@echo "  make gen-docs            - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
build-local: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose -f docker-compose.local.yml build

up-local: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫
	@echo "–ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞..."
	docker-compose -f docker-compose.local.yml up -d

down-local: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫
	@echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞..."
	docker-compose -f docker-compose.local.yml down

# –ü—Ä–æ–¥–∞–∫—à–Ω
build-prod: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
	@echo "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞..."
	docker build -f docker/api/Dockerfile.api -t ml-portal-api:latest .
	docker build -f docker/worker/Dockerfile.worker -t ml-portal-worker:latest .
	docker build -f docker/emb/Dockerfile.emb -t ml-portal-emb:latest .
	docker build -f docker/llm/Dockerfile.llm -t ml-portal-llm:latest .
	docker build -f frontend/Dockerfile -t ml-portal-frontend:latest ./frontend

up-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫
	@echo "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫–∞..."
	docker stack deploy -c docker-compose.prod.yml ml-portal

down-prod: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫
	@echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ç–µ–∫–∞..."
	docker stack rm ml-portal

# –£—Ç–∏–ª–∏—Ç—ã
clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –∏ volumes
	@echo "–û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –∏ volumes..."
	docker-compose -f docker-compose.local.yml down -v --remove-orphans
	docker system prune -f
	docker volume prune -f

clean-cache: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Python –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Python –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
	find . -name "*.pyc" -type f -delete 2>/dev/null || true
	find . -name "*.pyo" -type f -delete 2>/dev/null || true
	find . -name "*.pyd" -type f -delete 2>/dev/null || true
	rm -f back.txt front.txt 2>/dev/null || true
	@echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω"

clean-all: clean clean-cache ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–æ–±—Ä–∞–∑—ã + –∫—ç—à)
	@echo "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f docker-compose.local.yml logs -f

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
gen-backend: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –±—ç–∫–µ–Ω–¥–∞
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –±—ç–∫–µ–Ω–¥–∞..."
	python3 scripts/generate_code.py backend

gen-frontend: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
	python3 scripts/generate_code.py frontend

gen-devops: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å DevOps –∫–æ–¥ (Docker, Compose)
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è DevOps –∫–æ–¥–∞..."
	python3 scripts/generate_code.py devops

gen-all: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	python3 scripts/generate_code.py all

gen-docs: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
	python3 scripts/generate_code.py docs

gen-testing: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
	@echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é..."
	python3 scripts/generate_code.py testing

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test-local: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
	@echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	docker-compose -f docker-compose.local.yml exec api python -m pytest

test-system: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
	python3 test_local_system.py

test-e2e: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å E2E —Ç–µ—Å—Ç—ã –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
	@echo "–ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤..."
	python3 scripts/run_e2e_tests.py

test-quick: ## –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã (–±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ E2E)
	@echo "–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã..."
	@echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
	@curl -f http://localhost:8000/healthz || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤..."
	@curl -f http://localhost:8001/healthz || echo "‚ùå –≠–º–±–µ–¥–¥–∏–Ω–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
	@echo "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ LLM..."
	@curl -f http://localhost:8002/healthz || echo "‚ùå LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo "‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f docker-compose.local.yml ps

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy: build-prod up-prod ## –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (—Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫)
	@echo "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –û—Ç–∫–∞—Ç
rollback: ## –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
	@echo "–û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
	docker service update --rollback ml-portal_api
	docker service update --rollback ml-portal_worker-mixed
	docker service update --rollback ml-portal_worker-rag

# –°–∏—Å—Ç–µ–º–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
init-models: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∫–µ—Ç –º–æ–¥–µ–ª–µ–π –≤ MinIO
	@echo "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∫–µ—Ç–∞ –º–æ–¥–µ–ª–µ–π..."
	python3 backend/scripts/bootstrap_models_bucket.py

test-embedding: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
	@echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤..."
	python3 backend/scripts/test_embedding_system.py

demo-embedding: ## –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
	@echo "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤..."
	python3 backend/scripts/demo_embedding_system.py

logs-embedding: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ embedding worker
	@echo "–õ–æ–≥–∏ embedding worker:"
	docker-compose -f docker-compose.local.yml logs -f embedding-worker

# –ú–æ–¥–µ–ª–∏
download-models: ## –°–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª–∏ –∏–∑ HuggingFace
	@echo "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –∏–∑ HuggingFace..."
	@echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python scripts/download_models.py <model_id> [–æ–ø—Ü–∏–∏]"
	@echo "–ü—Ä–∏–º–µ—Ä—ã:"
	@echo "  python scripts/download_models.py sentence-transformers/all-MiniLM-L6-v2 --test"
	@echo "  python scripts/download_models.py sentence-transformers/all-mpnet-base-v2 --info"
	@echo "  python scripts/download_models.py intfloat/e5-large-v2 --include '*.safetensors'"

download-model: ## –°–∫–∞—á–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: BAAI/bge-3m)
	@echo "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏–∑ HuggingFace..."
	@echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make download-model MODEL_ID=<model_id> [–æ–ø—Ü–∏–∏]"
	@echo "–ü—Ä–∏–º–µ—Ä—ã:"
	@echo "  make download-model MODEL_ID=BAAI/bge-3m"
	@echo "  make download-model MODEL_ID=sentence-transformers/all-MiniLM-L6-v2 --test"
	@echo "  make download-model MODEL_ID=intfloat/e5-large-v2 --info"
	@if [ -z "$(MODEL_ID)" ]; then \
		echo ""; \
		echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω MODEL_ID"; \
		echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make download-model MODEL_ID=<model_id>"; \
		echo "–ù–∞–ø—Ä–∏–º–µ—Ä: make download-model MODEL_ID=BAAI/bge-3m"; \
	else \
		python3 scripts/download_model.py $(MODEL_ID) $(ARGS); \
	fi

list-models: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–∫–∞—á–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
	@echo "–°–∫–∞—á–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
	@if [ -d "models" ]; then \
		echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è models:"; \
		ls -la models/ 2>/dev/null || echo "  (–ø—É—Å—Ç–∞—è)"; \
		if [ -f "models/download_report.json" ]; then \
			echo ""; \
			echo "üìä –û—Ç—á–µ—Ç –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏:"; \
			python3 -c "import json; report=json.load(open('models/download_report.json')); print(f'–ú–æ–¥–µ–ª–µ–π: {report[\"total_models\"]}, –§–∞–π–ª–æ–≤: {report[\"total_files\"]}, –†–∞–∑–º–µ—Ä: {report[\"total_size_mb\"]:.1f} MB')" 2>/dev/null || echo "  (–æ—Ç—á–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)"; \
		fi; \
	else \
		echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è models –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; \
		echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make download-models"; \
	fi

# –ê–¥–º–∏–Ω–∫–∞ –∏ RBAC
create-superuser: ## –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@echo "üîê –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: " login; \
	read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–º–∏–Ω. 12 —Å–∏–º–≤–æ–ª–æ–≤): " password; \
	echo; \
	read -p "–í–≤–µ–¥–∏—Ç–µ email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): " email; \
	cd backend && python scripts/create_superuser.py --login "$$login" --password "$$password" --email "$$email"

test-rbac: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å RBAC —Å–∏—Å—Ç–µ–º—É
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RBAC —Å–∏—Å—Ç–µ–º—ã..."
	@echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000"
	@cd backend && python scripts/test_rbac_system.py

run-migrations: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
	@echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
	docker-compose -f docker-compose.local.yml exec api python -m alembic upgrade head

reset-db: run-migrations create-superuser ## –°–±—Ä–æ—Å–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@echo "‚úÖ –ë–î —Å–±—Ä–æ—à–µ–Ω–∞ –∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω"

test-security: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
	@echo "üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
	docker-compose -f docker-compose.local.yml exec api python scripts/test_security_improvements.py

test-tz-compliance: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é
	@echo "üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¢–ó..."
	docker-compose -f docker-compose.local.yml exec api python -m pytest tests/test_tz_compliance.py -v