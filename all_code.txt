### api/Dockerfile
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*

COPY backend/requirements/api.txt /tmp/requirements.txt
RUN pip install --upgrade pip && pip install -r /tmp/requirements.txt

COPY backend /app/backend

EXPOSE 8000
CMD ["uvicorn","backend.app.main:app","--host","0.0.0.0","--port","8000"]

### api/api.txt
fastapi==0.111.0
uvicorn[standard]==0.30.1
pydantic==2.8.2
pydantic-settings==2.4.0
SQLAlchemy==2.0.32
alembic==1.13.2
psycopg[binary]==3.2.1
celery[redis]==5.4.0
redis==5.0.7
httpx==0.27.0
prometheus-client==0.20.0
PyJWT==2.9.0
argon2-cffi==23.1.0
qdrant-client==1.9.1
minio==7.2.7
python-multipart==0.0.9

### emb/Dockerfile
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /app

COPY backend/requirements/emb.txt /tmp/requirements.txt
RUN pip install --upgrade pip && pip install -r /tmp/requirements.txt

COPY backend /app/backend

ENV PORT=8001 MODELS_DIR=/models MODEL_ID="BAAI/bge-m3"
VOLUME ["/models"]
EXPOSE 8001
CMD ["uvicorn","backend.apps.emb.main:app","--host","0.0.0.0","--port","8001"]

### emb/emb.txt
fastapi==0.111.0
uvicorn[standard]==0.30.1
numpy==2.0.1

### llm/Dockerfile
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /app

COPY backend/requirements/llm.txt /tmp/requirements.txt
RUN pip install --upgrade pip && pip install -r /tmp/requirements.txt

COPY backend /app/backend

ENV PORT=8002 LLM_MODEL_PATH=/models/model.gguf
VOLUME ["/models"]
EXPOSE 8002
CMD ["uvicorn","backend.apps.llm.main:app","--host","0.0.0.0","--port","8002"]

### llm/llm.txt
fastapi==0.111.0
uvicorn[standard]==0.30.1

### worker/Dockerfile
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*

COPY backend/requirements/worker.txt /tmp/requirements.txt
RUN pip install --upgrade pip && pip install -r /tmp/requirements.txt

COPY backend /app/backend

CMD ["bash","-lc","celery -A backend.app.celery_app:app worker -Q ${QUEUES:-normalize,chunk,embed,index,analyze,watch} -n worker@%h --loglevel=INFO"]

### worker/worker.txt
celery[redis]==5.4.0
redis==5.0.7
httpx==0.27.0
pydantic==2.8.2
SQLAlchemy==2.0.32
psycopg[binary]==3.2.1
qdrant-client==1.9.1
minio==7.2.7
prometheus-client==0.20.0
PyJWT==2.9.0
argon2-cffi==23.1.0
python-multipart==0.0.9

