version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ml_portal
      POSTGRES_USER: ml_portal
      POSTGRES_PASSWORD: ml_portal_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ml_portal"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # =============================================================================
  # BACKEND API SERVICE
  # =============================================================================
  
  api:
    build:
      context: .
      dockerfile: infra/docker/api/Dockerfile.api
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api/src/app:/app:ro
      - ./apps/api/alembic.ini:/app/alembic.ini:ro
      - ./models:/app/models:ro
      - ./infra/scripts:/app/infra/scripts:ro
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://ml_portal:ml_portal_password@postgres:5432/ml_portal
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=
      - JWT_SECRET=dev-jwt-secret-minimum-256-bits-for-development-use-only
      - ENVIRONMENT=development
      - DEBUG=true
      - IDEMPOTENCY_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Starting API setup...' &&
        python infra/scripts/simple_setup.py &&
        python infra/scripts/bootstrap_minio.py &&
        python infra/scripts/create_superuser.py --login admin --password admin123 &&
        echo 'Starting uvicorn server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app
      "

  # =============================================================================
  # FRONTEND DEVELOPMENT SERVICE  
  # =============================================================================
  
  frontend:
    image: node:20-alpine
    ports:
      - "5173:5173"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    working_dir: /app
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_PORT=5173
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        npm install --legacy-peer-deps &&
        echo 'Starting Vite dev server...' &&
        npm run dev -- --host 0.0.0.0
      "
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  minio_data:
