#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è ML Portal
"""
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç–∞–º
sys.path.append(str(Path(__file__).parent))

from download_models import download_model, get_model_info

def main():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è ML Portal"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥–µ–ª–µ–π
    models_dir = Path(__file__).parent.parent.parent / "models"
    models_dir.mkdir(exist_ok=True)
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏
    models = [
        {
            "id": "microsoft/DialoGPT-small",
            "type": "LLM",
            "description": "Small conversational model"
        },
        {
            "id": "microsoft/DialoGPT-medium", 
            "type": "LLM",
            "description": "Medium conversational model"
        },
        {
            "id": "sentence-transformers/all-MiniLM-L6-v2",
            "type": "Embeddings",
            "description": "Fast embeddings model"
        },
        {
            "id": "sentence-transformers/all-mpnet-base-v2",
            "type": "Embeddings", 
            "description": "High-quality embeddings model"
        }
    ]
    
    print("üöÄ ML Portal - Quick Model Downloader")
    print("=" * 50)
    
    for model in models:
        print(f"\nüì¶ {model['type']}: {model['id']}")
        print(f"   {model['description']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
        info = get_model_info(model['id'])
        if info:
            print(f"   üì• Downloads: {info.get('downloads', 'N/A')}")
            print(f"   ‚ù§Ô∏è  Likes: {info.get('likes', 'N/A')}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å
        metadata = download_model(
            model_id=model['id'],
            output_dir=models_dir,
            include_patterns=["*.safetensors", "*.json", "*.txt", "*.py"],
            exclude_patterns=["*.bin", "*.h5", "*.onnx"]
        )
        
        if metadata:
            print(f"   ‚úÖ Downloaded: {metadata['total_size_mb']:.1f} MB")
        else:
            print(f"   ‚ùå Failed to download")
    
    print(f"\nüéâ Download complete!")
    print(f"üìÅ Models saved in: {models_dir.absolute()}")

if __name__ == "__main__":
    main()
