events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # CORS headers
    map $http_method $cors_method {
        OPTIONS 11;
        GET     10;
        POST    10;
        PUT     10;
        PATCH   10;
        DELETE  10;
        HEAD    10;
    }

    # Frontend (Vite dev server)
    server {
        listen 8080 default_server;
        server_name localhost;

        # CORS headers for frontend
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization,Content-Type,Idempotency-Key,X-Tenant-Id,X-Request-ID" always;

        # Proxy all requests to frontend container
        location / {
            proxy_pass http://frontend:5173;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket support for Vite HMR
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
    }

    # API Backend
    server {
        listen 80;
        server_name api.localhost localhost;

        # Apply CORS handling
        if ($cors_method = "11") {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization,Content-Type,Idempotency-Key,X-Tenant-Id,X-Request-ID" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization,Content-Type,Idempotency-Key,X-Tenant-Id,X-Request-ID" always;
        add_header Access-Control-Expose-Headers "X-Request-ID,X-API-Version,X-RateLimit-Limit,X-RateLimit-Remaining,X-RateLimit-Reset,Retry-After" always;

        # SSE-friendly proxy settings
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 24h;
        proxy_send_timeout 24h;

        # API routes
        location /api/ {
            proxy_pass http://api:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # SSE support
            add_header X-Accel-Buffering no;
            add_header Cache-Control no-cache;
        }

        # Health checks
        location /readyz {
            proxy_pass http://api:8000/readyz;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /health {
            proxy_pass http://api:8000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /metrics {
            proxy_pass http://api:8000/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # JWKS endpoint
        location /.well-known/jwks.json {
            proxy_pass http://api:8000/.well-known/jwks.json;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Direct API access (bypass frontend)
    server {
        listen 8080;
        server_name api.localhost;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization,Content-Type,Idempotency-Key,X-Tenant-Id,X-Request-ID" always;

        location / {
            proxy_pass http://api:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}