#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã ML Portal
"""
import requests
import json
import time

def wait_for_service(url, timeout=60, interval=5):
    """–ñ–¥–µ–º –ø–æ–∫–∞ —Å–µ—Ä–≤–∏—Å —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"""
    start_time = time.time()
    while time.time() - start_time < timeout:
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                return True
        except:
            pass
        print(f"‚è≥ –ñ–¥–µ–º {url}...")
        time.sleep(interval)
    return False

def test_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—é —Å–∏—Å—Ç–µ–º—É"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ML Portal (–ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    print("=" * 60)
    
    # 1. –ñ–¥–µ–º API
    print("\n1. üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º API...")
    if not wait_for_service("http://localhost:8000/healthz"):
        print("‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        return False
    
    print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º setup —Å—Ç–∞—Ç—É—Å
    print("\n2. üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º setup —Å—Ç–∞—Ç—É—Å...")
    try:
        response = requests.get("http://localhost:8000/api/setup/status", timeout=10)
        if response.status_code == 200:
            status = response.json()
            print(f"   Debug mode: {status['debug_mode']}")
            print(f"   Admin users: {status['admin_users_count']}")
            print(f"   Has admin: {status['has_admin']}")
            
            if not status['has_admin']:
                print("\n3. üë§ –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
                create_response = requests.post(
                    "http://localhost:8000/api/setup/create-superuser",
                    timeout=10
                )
                if create_response.status_code == 200:
                    admin = create_response.json()
                    print(f"‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {admin['login']} ({admin['email']})")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {create_response.text}")
                    return False
            else:
                print("‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    print("\n4. üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
    try:
        # –õ–æ–≥–∏–Ω–∏–º—Å—è
        login_response = requests.post(
            "http://localhost:8000/api/auth/login",
            json={"login": "admin", "password": "admin123456"},
            timeout=10
        )
        
        if login_response.status_code == 200:
            token_data = login_response.json()
            token = token_data['access_token']
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
            headers = {"Authorization": f"Bearer {token}"}
            
            # Admin API
            admin_response = requests.get(
                "http://localhost:8000/api/admin/users",
                headers=headers,
                timeout=10
            )
            if admin_response.status_code == 200:
                print("‚úÖ Admin API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print(f"‚ö†Ô∏è  Admin API: {admin_response.status_code}")
            
            # RAG API (POST, –Ω–µ GET)
            rag_response = requests.post(
                "http://localhost:8000/api/rag/search",
                headers=headers,
                json={"query": "test"},
                timeout=10
            )
            if rag_response.status_code in [200, 422]:  # 422 = validation error, –Ω–æ API –¥–æ—Å—Ç—É–ø–µ–Ω
                print("‚úÖ RAG API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print(f"‚ö†Ô∏è  RAG API: {rag_response.status_code}")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    print("\n5. üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...")
    if wait_for_service("http://localhost:3000", timeout=30):
        print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:3000")
    else:
        print("‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
    print("(–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞: make up-local)")
    time.sleep(10)
    
    if test_system():
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:")
        print("   ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3000")
        print("   ‚Ä¢ API Docs: http://localhost:8000/docs")
        print("   ‚Ä¢ Admin: admin / admin123456")
        print("   ‚Ä¢ MinIO: http://localhost:9001 (minioadmin / minioadmin)")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π")

if __name__ == "__main__":
    main()
